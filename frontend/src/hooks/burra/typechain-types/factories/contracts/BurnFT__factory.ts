/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { BurnFT, BurnFTInterface } from "../../contracts/BurnFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600681526020017f6275726e465400000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f424654000000000000000000000000000000000000000000000000000000000081525081600090816200008f919062000324565b508060019081620000a1919062000324565b5050506200040b565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012c57607f821691505b602082108103620001425762000141620000e4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001ac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200016d565b620001b886836200016d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000205620001ff620001f984620001d0565b620001da565b620001d0565b9050919050565b6000819050919050565b6200022183620001e4565b6200023962000230826200020c565b8484546200017a565b825550505050565b600090565b6200025062000241565b6200025d81848462000216565b505050565b5b8181101562000285576200027960008262000246565b60018101905062000263565b5050565b601f821115620002d4576200029e8162000148565b620002a9846200015d565b81016020851015620002b9578190505b620002d1620002c8856200015d565b83018262000262565b50505b505050565b600082821c905092915050565b6000620002f960001984600802620002d9565b1980831691505092915050565b6000620003148383620002e6565b9150826002028217905092915050565b6200032f82620000aa565b67ffffffffffffffff8111156200034b576200034a620000b5565b5b62000357825462000113565b6200036482828562000289565b600060209050601f8311600181146200039c576000841562000387578287015190505b62000393858262000306565b86555062000403565b601f198416620003ac8662000148565b60005b82811015620003d657848901518255600182019150602085019450602081019050620003af565b86831015620003f65784890151620003f2601f891682620002e6565b8355505b6001600288020188555050505b505050505050565b611fae806200041b6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636a62784211610097578063b88d4fde11610066578063b88d4fde146102a9578063c87b56dd146102c5578063e985e9c5146102f5578063fa5441611461032557610100565b80636a6278421461022357806370a082311461023f57806395d89b411461026f578063a22cb4651461028d57610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb57806342966c68146101d75780636352211e146101f357610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611795565b610355565b60405161012c91906117dd565b60405180910390f35b61013d610437565b60405161014a9190611888565b60405180910390f35b61016d600480360381019061016891906118e0565b6104c9565b60405161017a919061194e565b60405180910390f35b61019d60048036038101906101989190611995565b6104e5565b005b6101b960048036038101906101b491906119d5565b6104fb565b005b6101d560048036038101906101d091906119d5565b6105fd565b005b6101f160048036038101906101ec91906118e0565b61061d565b005b61020d600480360381019061020891906118e0565b610629565b60405161021a919061194e565b60405180910390f35b61023d60048036038101906102389190611a28565b61063b565b005b61025960048036038101906102549190611a28565b610663565b6040516102669190611a64565b60405180910390f35b61027761071d565b6040516102849190611888565b60405180910390f35b6102a760048036038101906102a29190611aab565b6107af565b005b6102c360048036038101906102be9190611c20565b6107c5565b005b6102df60048036038101906102da91906118e0565b6107e2565b6040516102ec9190611888565b60405180910390f35b61030f600480360381019061030a9190611ca3565b61084b565b60405161031c91906117dd565b60405180910390f35b61033f600480360381019061033a9190611a28565b6108df565b60405161034c9190611a64565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610430575061042f82610928565b5b9050919050565b60606000805461044690611d12565b80601f016020809104026020016040519081016040528092919081815260200182805461047290611d12565b80156104bf5780601f10610494576101008083540402835291602001916104bf565b820191906000526020600020905b8154815290600101906020018083116104a257829003601f168201915b5050505050905090565b60006104d482610992565b506104de82610a1a565b9050919050565b6104f782826104f2610a57565b610a5f565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361056d5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610564919061194e565b60405180910390fd5b6000610581838361057c610a57565b610a71565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105f7578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105ee93929190611d43565b60405180910390fd5b50505050565b610618838383604051806020016040528060008152506107c5565b505050565b61062681610c8b565b50565b600061063482610992565b9050919050565b6000600160065461064c9190611da9565b90506106588282610d11565b806006819055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106d65760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106cd919061194e565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461072c90611d12565b80601f016020809104026020016040519081016040528092919081815260200182805461075890611d12565b80156107a55780601f1061077a576101008083540402835291602001916107a5565b820191906000526020600020905b81548152906001019060200180831161078857829003601f168201915b5050505050905090565b6107c16107ba610a57565b8383610d2f565b5050565b6107d08484846104fb565b6107dc84848484610e9e565b50505050565b60606107ed82610992565b5060006107f8611055565b905060008151116108185760405180602001604052806000815250610843565b806108228461106c565b604051602001610833929190611e19565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061099e8361113a565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a1157826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a089190611a64565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610a6c8383836001611177565b505050565b600080610a7d8461113a565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610abf57610abe81848661133c565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b5057610b01600085600080611177565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610bd3576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000610c9a6000836000610a71565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d0d57816040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610d049190611a64565b60405180910390fd5b5050565b610d2b828260405180602001604052806000815250611400565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da057816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d97919061194e565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e9191906117dd565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561104f578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610ee2610a57565b8685856040518563ffffffff1660e01b8152600401610f049493929190611e92565b6020604051808303816000875af1925050508015610f4057506040513d601f19601f82011682018060405250810190610f3d9190611ef3565b60015b610fc4573d8060008114610f70576040519150601f19603f3d011682016040523d82523d6000602084013e610f75565b606091505b506000815103610fbc57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fb3919061194e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461104d57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611044919061194e565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b60606000600161107b8461141c565b01905060008167ffffffffffffffff81111561109a57611099611af5565b5b6040519080825280601f01601f1916602001820160405280156110cc5781602001600182028036833780820191505090505b509050600082602001820190505b60011561112f578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112357611122611f20565b5b049450600085036110da575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806111b05750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156112e45760006111c084610992565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561122b57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561123e575061123c818461084b565b155b1561128057826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611277919061194e565b60405180910390fd5b81156112e257838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61134783838361156f565b6113fb57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113bc57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016113b39190611a64565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016113f2929190611f4f565b60405180910390fd5b505050565b61140a8383611630565b6114176000848484610e9e565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061147a577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114705761146f611f20565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114b7576d04ee2d6d415b85acef810000000083816114ad576114ac611f20565b5b0492506020810190505b662386f26fc1000083106114e657662386f26fc1000083816114dc576114db611f20565b5b0492506010810190505b6305f5e100831061150f576305f5e100838161150557611504611f20565b5b0492506008810190505b612710831061153457612710838161152a57611529611f20565b5b0492506004810190505b60648310611557576064838161154d5761154c611f20565b5b0492506002810190505b600a8310611566576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561162757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115e857506115e7848461084b565b5b8061162657508273ffffffffffffffffffffffffffffffffffffffff1661160e83610a1a565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116a25760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611699919061194e565b60405180910390fd5b60006116b083836000610a71565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117245760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161171b919061194e565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117728161173d565b811461177d57600080fd5b50565b60008135905061178f81611769565b92915050565b6000602082840312156117ab576117aa611733565b5b60006117b984828501611780565b91505092915050565b60008115159050919050565b6117d7816117c2565b82525050565b60006020820190506117f260008301846117ce565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611832578082015181840152602081019050611817565b60008484015250505050565b6000601f19601f8301169050919050565b600061185a826117f8565b6118648185611803565b9350611874818560208601611814565b61187d8161183e565b840191505092915050565b600060208201905081810360008301526118a2818461184f565b905092915050565b6000819050919050565b6118bd816118aa565b81146118c857600080fd5b50565b6000813590506118da816118b4565b92915050565b6000602082840312156118f6576118f5611733565b5b6000611904848285016118cb565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119388261190d565b9050919050565b6119488161192d565b82525050565b6000602082019050611963600083018461193f565b92915050565b6119728161192d565b811461197d57600080fd5b50565b60008135905061198f81611969565b92915050565b600080604083850312156119ac576119ab611733565b5b60006119ba85828601611980565b92505060206119cb858286016118cb565b9150509250929050565b6000806000606084860312156119ee576119ed611733565b5b60006119fc86828701611980565b9350506020611a0d86828701611980565b9250506040611a1e868287016118cb565b9150509250925092565b600060208284031215611a3e57611a3d611733565b5b6000611a4c84828501611980565b91505092915050565b611a5e816118aa565b82525050565b6000602082019050611a796000830184611a55565b92915050565b611a88816117c2565b8114611a9357600080fd5b50565b600081359050611aa581611a7f565b92915050565b60008060408385031215611ac257611ac1611733565b5b6000611ad085828601611980565b9250506020611ae185828601611a96565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b2d8261183e565b810181811067ffffffffffffffff82111715611b4c57611b4b611af5565b5b80604052505050565b6000611b5f611729565b9050611b6b8282611b24565b919050565b600067ffffffffffffffff821115611b8b57611b8a611af5565b5b611b948261183e565b9050602081019050919050565b82818337600083830152505050565b6000611bc3611bbe84611b70565b611b55565b905082815260208101848484011115611bdf57611bde611af0565b5b611bea848285611ba1565b509392505050565b600082601f830112611c0757611c06611aeb565b5b8135611c17848260208601611bb0565b91505092915050565b60008060008060808587031215611c3a57611c39611733565b5b6000611c4887828801611980565b9450506020611c5987828801611980565b9350506040611c6a878288016118cb565b925050606085013567ffffffffffffffff811115611c8b57611c8a611738565b5b611c9787828801611bf2565b91505092959194509250565b60008060408385031215611cba57611cb9611733565b5b6000611cc885828601611980565b9250506020611cd985828601611980565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d2a57607f821691505b602082108103611d3d57611d3c611ce3565b5b50919050565b6000606082019050611d58600083018661193f565b611d656020830185611a55565b611d72604083018461193f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611db4826118aa565b9150611dbf836118aa565b9250828201905080821115611dd757611dd6611d7a565b5b92915050565b600081905092915050565b6000611df3826117f8565b611dfd8185611ddd565b9350611e0d818560208601611814565b80840191505092915050565b6000611e258285611de8565b9150611e318284611de8565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611e6482611e3d565b611e6e8185611e48565b9350611e7e818560208601611814565b611e878161183e565b840191505092915050565b6000608082019050611ea7600083018761193f565b611eb4602083018661193f565b611ec16040830185611a55565b8181036060830152611ed38184611e59565b905095945050505050565b600081519050611eed81611769565b92915050565b600060208284031215611f0957611f08611733565b5b6000611f1784828501611ede565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050611f64600083018561193f565b611f716020830184611a55565b939250505056fea264697066735822122067825a10768b517b413c87359021fe9003133f77420c5b146390c4b4bd6d108a64736f6c63430008140033";

type BurnFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BurnFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BurnFT__factory extends ContractFactory {
  constructor(...args: BurnFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BurnFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BurnFT__factory {
    return super.connect(runner) as BurnFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BurnFTInterface {
    return new Interface(_abi) as BurnFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BurnFT {
    return new Contract(address, _abi, runner) as unknown as BurnFT;
  }
}
