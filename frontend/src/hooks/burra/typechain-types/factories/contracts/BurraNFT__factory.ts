/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { BurraNFT, BurraNFTInterface } from "../../contracts/BurraNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_facilitator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isTest",
        type: "bool",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260006007553480156200001657600080fd5b506040516200261a3803806200261a83398181016040528101906200003c919062000180565b6040518060400160405280600881526020017f62757272614e46540000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f42465400000000000000000000000000000000000000000000000000000000008152508160009081620000b991906200042c565b508060019081620000cb91906200042c565b50505080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000513565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000148826200011b565b9050919050565b6200015a816200013b565b81146200016657600080fd5b50565b6000815190506200017a816200014f565b92915050565b60006020828403121562000199576200019862000116565b5b6000620001a98482850162000169565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200023457607f821691505b6020821081036200024a5762000249620001ec565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002b47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000275565b620002c0868362000275565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200030d620003076200030184620002d8565b620002e2565b620002d8565b9050919050565b6000819050919050565b6200032983620002ec565b62000341620003388262000314565b84845462000282565b825550505050565b600090565b6200035862000349565b620003658184846200031e565b505050565b5b818110156200038d57620003816000826200034e565b6001810190506200036b565b5050565b601f821115620003dc57620003a68162000250565b620003b18462000265565b81016020851015620003c1578190505b620003d9620003d08562000265565b8301826200036a565b50505b505050565b600082821c905092915050565b60006200040160001984600802620003e1565b1980831691505092915050565b60006200041c8383620003ee565b9150826002028217905092915050565b6200043782620001b2565b67ffffffffffffffff811115620004535762000452620001bd565b5b6200045f82546200021b565b6200046c82828562000391565b600060209050601f831160018114620004a457600084156200048f578287015190505b6200049b85826200040e565b8655506200050b565b601f198416620004b48662000250565b60005b82811015620004de57848901518255600182019150602085019450602081019050620004b7565b86831015620004fe5784890151620004fa601f891682620003ee565b8355505b6001600288020188555050505b505050505050565b6120f780620005236000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636352211e11610097578063b88d4fde11610066578063b88d4fde146102a9578063c87b56dd146102c5578063e985e9c5146102f5578063f15376861461032557610100565b80636352211e1461020f57806370a082311461023f57806395d89b411461026f578063a22cb4651461028d57610100565b80632097d3fb116100d35780632097d3fb1461019f57806323b872dd146101bb57806342842e0e146101d757806342966c68146101f357610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611872565b610355565b60405161012c91906118ba565b60405180910390f35b61013d610437565b60405161014a9190611965565b60405180910390f35b61016d600480360381019061016891906119bd565b6104c9565b60405161017a9190611a2b565b60405180910390f35b61019d60048036038101906101989190611a72565b6104e5565b005b6101b960048036038101906101b49190611ade565b6104fb565b005b6101d560048036038101906101d09190611b1e565b610600565b005b6101f160048036038101906101ec9190611b1e565b610702565b005b61020d600480360381019061020891906119bd565b610722565b005b610229600480360381019061022491906119bd565b61072e565b6040516102369190611a2b565b60405180910390f35b61025960048036038101906102549190611b71565b610740565b6040516102669190611bad565b60405180910390f35b6102776107fa565b6040516102849190611965565b60405180910390f35b6102a760048036038101906102a29190611ade565b61088c565b005b6102c360048036038101906102be9190611cfd565b6108a2565b005b6102df60048036038101906102da91906119bd565b6108bf565b6040516102ec9190611965565b60405180910390f35b61030f600480360381019061030a9190611d80565b610928565b60405161031c91906118ba565b60405180910390f35b61033f600480360381019061033a9190611b71565b6109bc565b60405161034c9190611bad565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610430575061042f82610a05565b5b9050919050565b60606000805461044690611def565b80601f016020809104026020016040519081016040528092919081815260200182805461047290611def565b80156104bf5780601f10610494576101008083540402835291602001916104bf565b820191906000526020600020905b8154815290600101906020018083116104a257829003601f168201915b5050505050905090565b60006104d482610a6f565b506104de82610af7565b9050919050565b6104f782826104f2610b34565b610b3c565b5050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806105545750805b610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a90611e6c565b60405180910390fd5b600060016007546105a49190611ebb565b90506105b08382610b4e565b8060078190555080600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106725760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106699190611a2b565b60405180910390fd5b60006106868383610681610b34565b610b6c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106fc578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016106f393929190611eef565b60405180910390fd5b50505050565b61071d838383604051806020016040528060008152506108a2565b505050565b61072b81610d86565b50565b600061073982610a6f565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107b35760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107aa9190611a2b565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461080990611def565b80601f016020809104026020016040519081016040528092919081815260200182805461083590611def565b80156108825780601f1061085757610100808354040283529160200191610882565b820191906000526020600020905b81548152906001019060200180831161086557829003601f168201915b5050505050905090565b61089e610897610b34565b8383610e0c565b5050565b6108ad848484610600565b6108b984848484610f7b565b50505050565b60606108ca82610a6f565b5060006108d5611132565b905060008151116108f55760405180602001604052806000815250610920565b806108ff84611149565b604051602001610910929190611f62565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610a7b83611217565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aee57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610ae59190611bad565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610b498383836001611254565b505050565b610b68828260405180602001604052806000815250611419565b5050565b600080610b7884611217565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610bba57610bb9818486611435565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c4b57610bfc600085600080611254565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610cce576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000610d956000836000610b6c565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e0857816040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610dff9190611bad565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e7d57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610e749190611a2b565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f6e91906118ba565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561112c578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fbf610b34565b8685856040518563ffffffff1660e01b8152600401610fe19493929190611fdb565b6020604051808303816000875af192505050801561101d57506040513d601f19601f8201168201806040525081019061101a919061203c565b60015b6110a1573d806000811461104d576040519150601f19603f3d011682016040523d82523d6000602084013e611052565b606091505b50600081510361109957836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110909190611a2b565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461112a57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111219190611a2b565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b606060006001611158846114f9565b01905060008167ffffffffffffffff81111561117757611176611bd2565b5b6040519080825280601f01601f1916602001820160405280156111a95781602001600182028036833780820191505090505b509050600082602001820190505b60011561120c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611200576111ff612069565b5b049450600085036111b7575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061128d5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156113c157600061129d84610a6f565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561130857508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561131b57506113198184610928565b155b1561135d57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016113549190611a2b565b60405180910390fd5b81156113bf57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611423838361164c565b6114306000848484610f7b565b505050565b611440838383611745565b6114f457600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114b557806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016114ac9190611bad565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016114eb929190612098565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611557577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161154d5761154c612069565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611594576d04ee2d6d415b85acef8100000000838161158a57611589612069565b5b0492506020810190505b662386f26fc1000083106115c357662386f26fc1000083816115b9576115b8612069565b5b0492506010810190505b6305f5e10083106115ec576305f5e10083816115e2576115e1612069565b5b0492506008810190505b612710831061161157612710838161160757611606612069565b5b0492506004810190505b60648310611634576064838161162a57611629612069565b5b0492506002810190505b600a8310611643576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116be5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116b59190611a2b565b60405180910390fd5b60006116cc83836000610b6c565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117405760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016117379190611a2b565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117fd57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806117be57506117bd8484610928565b5b806117fc57508273ffffffffffffffffffffffffffffffffffffffff166117e483610af7565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61184f8161181a565b811461185a57600080fd5b50565b60008135905061186c81611846565b92915050565b60006020828403121561188857611887611810565b5b60006118968482850161185d565b91505092915050565b60008115159050919050565b6118b48161189f565b82525050565b60006020820190506118cf60008301846118ab565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561190f5780820151818401526020810190506118f4565b60008484015250505050565b6000601f19601f8301169050919050565b6000611937826118d5565b61194181856118e0565b93506119518185602086016118f1565b61195a8161191b565b840191505092915050565b6000602082019050818103600083015261197f818461192c565b905092915050565b6000819050919050565b61199a81611987565b81146119a557600080fd5b50565b6000813590506119b781611991565b92915050565b6000602082840312156119d3576119d2611810565b5b60006119e1848285016119a8565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a15826119ea565b9050919050565b611a2581611a0a565b82525050565b6000602082019050611a406000830184611a1c565b92915050565b611a4f81611a0a565b8114611a5a57600080fd5b50565b600081359050611a6c81611a46565b92915050565b60008060408385031215611a8957611a88611810565b5b6000611a9785828601611a5d565b9250506020611aa8858286016119a8565b9150509250929050565b611abb8161189f565b8114611ac657600080fd5b50565b600081359050611ad881611ab2565b92915050565b60008060408385031215611af557611af4611810565b5b6000611b0385828601611a5d565b9250506020611b1485828601611ac9565b9150509250929050565b600080600060608486031215611b3757611b36611810565b5b6000611b4586828701611a5d565b9350506020611b5686828701611a5d565b9250506040611b67868287016119a8565b9150509250925092565b600060208284031215611b8757611b86611810565b5b6000611b9584828501611a5d565b91505092915050565b611ba781611987565b82525050565b6000602082019050611bc26000830184611b9e565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c0a8261191b565b810181811067ffffffffffffffff82111715611c2957611c28611bd2565b5b80604052505050565b6000611c3c611806565b9050611c488282611c01565b919050565b600067ffffffffffffffff821115611c6857611c67611bd2565b5b611c718261191b565b9050602081019050919050565b82818337600083830152505050565b6000611ca0611c9b84611c4d565b611c32565b905082815260208101848484011115611cbc57611cbb611bcd565b5b611cc7848285611c7e565b509392505050565b600082601f830112611ce457611ce3611bc8565b5b8135611cf4848260208601611c8d565b91505092915050565b60008060008060808587031215611d1757611d16611810565b5b6000611d2587828801611a5d565b9450506020611d3687828801611a5d565b9350506040611d47878288016119a8565b925050606085013567ffffffffffffffff811115611d6857611d67611815565b5b611d7487828801611ccf565b91505092959194509250565b60008060408385031215611d9757611d96611810565b5b6000611da585828601611a5d565b9250506020611db685828601611a5d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e0757607f821691505b602082108103611e1a57611e19611dc0565b5b50919050565b7f796f752063616e27742063616c6c207468697300000000000000000000000000600082015250565b6000611e566013836118e0565b9150611e6182611e20565b602082019050919050565b60006020820190508181036000830152611e8581611e49565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ec682611987565b9150611ed183611987565b9250828201905080821115611ee957611ee8611e8c565b5b92915050565b6000606082019050611f046000830186611a1c565b611f116020830185611b9e565b611f1e6040830184611a1c565b949350505050565b600081905092915050565b6000611f3c826118d5565b611f468185611f26565b9350611f568185602086016118f1565b80840191505092915050565b6000611f6e8285611f31565b9150611f7a8284611f31565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611fad82611f86565b611fb78185611f91565b9350611fc78185602086016118f1565b611fd08161191b565b840191505092915050565b6000608082019050611ff06000830187611a1c565b611ffd6020830186611a1c565b61200a6040830185611b9e565b818103606083015261201c8184611fa2565b905095945050505050565b60008151905061203681611846565b92915050565b60006020828403121561205257612051611810565b5b600061206084828501612027565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506120ad6000830185611a1c565b6120ba6020830184611b9e565b939250505056fea2646970667358221220bb1a6f52edae9df89e312e50823556d69513472245e034419bdbac12b6147c3c64736f6c63430008140033";

type BurraNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BurraNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BurraNFT__factory extends ContractFactory {
  constructor(...args: BurraNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _facilitator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_facilitator, overrides || {});
  }
  override deploy(
    _facilitator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_facilitator, overrides || {}) as Promise<
      BurraNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BurraNFT__factory {
    return super.connect(runner) as BurraNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BurraNFTInterface {
    return new Interface(_abi) as BurraNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BurraNFT {
    return new Contract(address, _abi, runner) as unknown as BurraNFT;
  }
}
